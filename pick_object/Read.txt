Сегодня рассмотрим один из способов выбора объекта по клику мышки. 

Результат выполнения программы вы видете на своих экранах. 

На самом деле сушествует как минимум метода решания данной задачи.
Первый метод это выпустить луч из камеры в сторону клика мышки и просчитать все пересичения данного луча с объктами сцены.
Это трудозатратно ка кс точки зрения вычеслений так и сложно для понимания самого алгоритма.
Второй способ несколько проше, именно его мы и рассмотрим в данном примере.
 Это выбор объктов по индексу цветов. 
Алгорит достаточно прост, первое что нам понадобиться это использовать метод gl.readPixels. 

Метод WebGLRenderingContext.readPixels () API WebGL считывает блок пикселей из указанного
 прямоугольника текущего цветового буфера кадров в объект ArrayBufferView.

-------------------------------------------------------------------------------------------------------------------
void gl.readPixels(x, y, width, height, format, type, pixels); 
Х
определяющий первый горизонтальный пиксель, который читается 
из нижнего левого угла прямоугольного блока пикселей.

Y
соответственно определяющий первый вертикального  пиксель, 
// который читается из нижнего левого угла прямоугольного блока пикселей.

width
 определяющий ширину прямоугольника.

height
определяющий высоту прямоугольника.


format

определяющий формат данных пикселей. Возможные значения:
gl.ALPHA: удаляет красный, зеленый и синий компоненты и читает альфа-компонент.
gl.RGB: отбрасывает альфа-компоненты и читает красный, зеленый и синий компоненты.
gl.RGBA: красный, зеленый, синий и альфа-компоненты считываются из цветового буфера.

type

определяющий тип данных данных пикселей. 
мы будем импользовать  gl.UNSIGNED_BYTE 

pixels
Объект ArrayBufferView для чтения данных. Тип массива должен соответствовать типу параметра type.
в нашем случаи Uint8Array for gl.UNSIGNED_BYTE.
---------------------------------------------------------------------------------------------------------------------
    Итак как применить данный метод для поставленной задача. В момент клика мышки мы вызываем метод gl.readPixels
и если цвет пикселя в считаной информации соответсвует тому что мы заранее закрепим за даннм обектом 
то такой объект считаеться выделенным.
    Как же нам получить нужный цвет если на всех объекты нашеей сцены наложена одна и таже тектсура плюс тени изменяют
	цвета пикселей?
Для этого нам необходимо рендерить сцену в два прохода. первый раз мы отображаем цвета по которым будем выбирать объекты.
 Вот таким образом.
- демонстрирую -  
так мы считываем цвет по координатам клика мышки.   
второй раз уже рендерим в обычном режиме. Т.К. даная отрисовка идет в одном цикле кадра то пользываетель не увидит 
результат с буфером цветом,
а будет видеть только финальный результат. 

для демонстрации кода Я подготовил упрошоную сцену убрал все лишнее оставив только один объекта без источника света и теней. 

первым делом рассмотрим фрагментный шейденр. Тут все просто если значение u_Clicked = 1 то  выходяший цвет пикселя
 gl_FragColor 
будет тот который мы закрепили как u_colorPick, 
в противном случаи рендерим цвет из тектуры. Также к цвету тектуры Я прибовляю некоторое значение которое
будет визуально определять что объект выбран. //Когда перйдем в JS я покажу как это работает. 

------------------------------------------------------------------------------------------------------------------------
Вот собственно и все все дополнительные материалы будут по ссылке к данному видео. 
До новых встреть в эфире.
---------



